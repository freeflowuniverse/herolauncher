{
  "openapi": "3.0.0",
  "info": {
    "title": "Pet Store API",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI specification",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "operationId": "getPets",
        "summary": "Returns all pets",
        "description": "Returns all pets from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of pets to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pets",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Fluffy",
                    "species": "cat",
                    "age": 3
                  },
                  {
                    "id": 2,
                    "name": "Rex",
                    "species": "dog",
                    "age": 5
                  },
                  {
                    "id": 3,
                    "name": "Whiskers",
                    "species": "cat",
                    "age": 2
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid request parameters"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createPet",
        "summary": "Create a pet",
        "description": "Creates a new pet in the store",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "species"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "species": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "example": {
                "name": "Buddy",
                "species": "dog",
                "age": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created",
            "content": {
              "application/json": {
                "example": {
                  "id": 4,
                  "name": "Buddy",
                  "species": "dog",
                  "age": 1
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid pet data"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "operationId": "getPetById",
        "summary": "Returns a pet by ID",
        "description": "Returns a single pet by ID",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet found",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Fluffy",
                  "species": "cat",
                  "age": 3
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Pet not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updatePet",
        "summary": "Updates a pet",
        "description": "Updates an existing pet by ID",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated pet object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "species": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "example": {
                "name": "Fluffy",
                "species": "cat",
                "age": 4
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Fluffy",
                  "species": "cat",
                  "age": 4
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Pet not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePet",
        "summary": "Deletes a pet",
        "description": "Deletes a pet by ID",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet deleted"
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Pet not found"
                }
              }
            }
          }
        }
      }
    }
  }
}
